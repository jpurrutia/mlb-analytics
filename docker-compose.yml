version: '3.8'

services:
  # mlpythonbase:
  #   build: 
  #     context: ./mlpythonbase
  #     dockerfile: Dockerfile
  #   container_name: mlpythonbase
  #   image: mlpythonbase
  #   depends_on:
  #     - pythonbase
  #   # Expose Jupyter's default command to run Jupyter in the container
  #   command: >
  #     jupyter notebook
  #     --ip=0.0.0.0
  #     --port=8888
  #     --no-browser
  #     --allow-root
  #   ports:
  #     - "8888:8888"
  #   volumes:
  #     - ./mlpythonbase/notebooks:/apps/notebooks # Mount the notebooks folder to /apps/notebooks in the container

  pythonbase:
    build: 
      context: ./pythonbase
      dockerfile: Dockerfile
    container_name: pythonbase
    image: pythonbase
    depends_on:
      - linuxbase
    volumes:
      - .:/app
    working_dir: /app
    environment:
      - PYTHONPATH=/app

  linuxbase:
    build: ./linuxbase
    container_name: linuxbase
    image: linuxbase

  ingestbase:
    build:
      context: .
      dockerfile: ingestbase/Dockerfile
    container_name: ingestbase
    image: ingestbase
    depends_on:
      - pgduckdb
      - pythonbase
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app
      - POSTGRES_HOST=pgduckdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PORT=5432

  dbtbase:
    build: 
      context: ./dbtbase
      dockerfile: Dockerfile
    container_name: dbtbase
    image: dbtbase
    depends_on:
      - pgduckdb
      - pythonbase
    volumes:
      - ./dbtbase/mlb_dbt:/app/mlb_dbt
    environment:
      - DBT_PROFILES_DIR=/app/mlb_dbt
      - POSTGRES_HOST=pgduckdb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PORT=5432

  pgduckdb:
    image: pgduckdb/pgduckdb:17-v0.3.1
    container_name: pgduckdb
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - pgduckdb_data:/var/lib/postgresql/data # persisten volume for DB storage
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql # Run SQL script on startup
      - ./data:/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      retries: 5
      
volumes:
  pgduckdb_data:
   driver: local